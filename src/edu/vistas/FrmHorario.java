
package edu.vistas;

import edu.dao.DaoCoordinador;
import edu.dao.DaoHorario;
import edu.modelo.Combo;
import edu.modelo.CoordinadorSSE;
import edu.modelo.HorarioAtencion;
import edu.utilidades.Validaciones;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Nombre de la clase:FrmHorario
 * Fecha:12/08/18
 * Versión: 2.2
 * CopyRight:SSE-ITCA
 * @author Roxana Menjivar
 */
public class FrmHorario extends javax.swing.JInternalFrame {

    DaoHorario daoH = new DaoHorario();
    HorarioAtencion hor = new HorarioAtencion();
    DaoCoordinador daoC = new DaoCoordinador();
    Validaciones validar = new Validaciones();
    Menu menu = new Menu();
    
    List<Combo> l;
    Combo cmb = new Combo();
    
    public FrmHorario() {
        initComponents();
        cargarComboC();
        mostrar();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void cargarComboC()
    {
        l= daoH.mostrarCoordinador();
        
        for(int i=0;i<l.size();i++)
        {
            cmb = new Combo(l.get(i).getIdCombo(),l.get(i).getDescripcion());
            this.jCmbCoord.addItem(cmb.toString()); 
        } 
    }
    
    public void llenarTabla()
    {
        int fila = this.jTableDatos.getSelectedRow();

        if (fila > -1) 
        {
            this.jTxtCodigo.setText(String.valueOf(this.jTableDatos.getValueAt(fila, 0)));
            String coord = String.valueOf(this.jTableDatos.getValueAt(fila, 1));
            this.jCmbCoord.getModel().setSelectedItem(coord);
            String dia = String.valueOf(this.jTableDatos.getValueAt(fila, 2));
            this.jCmbDia.getModel().setSelectedItem(dia);
            this.jTxtHoraD.setText(String.valueOf(this.jTableDatos.getValueAt(fila, 3)));
            this.jTxtHoraH.setText(String.valueOf(this.jTableDatos.getValueAt(fila, 4)));
            this.jTxtLugar.setText(String.valueOf(this.jTableDatos.getValueAt(fila, 5)));
        }
     }
    
    public void mostrar()
    {
        String[] columnas={"Codigo","Coordinador","Dia","Hora desde","Hora hasta","lugar"};
        Object[] obj =new Object[6];
        DefaultTableModel tabla = new DefaultTableModel(null,columnas);
        
        try 
        {
            List lista =daoH.mostrarHorario();
            for (int i = 0; i < lista.size(); i++) 
            {
                hor=(HorarioAtencion)lista.get(i);
                obj[0]=hor.getIdHorarioA();
                obj[1]=daoC.getIdCoordinador(hor.getIdCoordinador()).getNombre();
                obj[2]=hor.getDia();
                obj[3]=hor.getHoraDesde();
                obj[4]=hor.getHoraHasta();
                obj[5]=hor.getLugar();
                tabla.addRow(obj);
            }
            this.jTableDatos.setModel(tabla);
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos en la tabla ", "Carga Fallida "
                    + e.getMessage(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void insertar()
    {
        try 
        {
            int idCor=0;
             for (int i = 0; i < l.size(); i++) 
             {
                 if(jCmbCoord.getSelectedItem().equals(l.get(i).getDescripcion()))
                 {
                     idCor = l.get(i).getIdCombo();
                 }
             }
             hor.setIdCoordinador(idCor);
             hor.setDia(this.jCmbDia.getSelectedItem().toString());
             hor.setHoraDesde(this.jTxtHoraD.getText());
             hor.setHoraHasta(this.jTxtHoraH.getText());
             hor.setLugar(this.jTxtLugar.getText());
             
             if (!validar.IsNullOrEmpty(String.valueOf(hor.getIdCoordinador()))
                        && !validar.IsNullOrEmpty(hor.getDia())
                        && !validar.IsNullOrEmpty(hor.getHoraDesde())
                        && !validar.IsNullOrEmpty(hor.getHoraHasta())
                        && !validar.IsNullOrEmpty(hor.getLugar())) 
                {
                    try 
                    {
                        daoH.insertar(hor);
                        mostrar();
                        limpiar();
                        JOptionPane.showMessageDialog(null, "El registro se ha guardado con exito", "Coordinador",
                                    JOptionPane.INFORMATION_MESSAGE);
                    } 
                    catch (Exception e) 
                    {
                        JOptionPane.showMessageDialog(null,"Ocurrio un problema al insertar: " + e.getMessage(),
                                "Error al insertar",
                                JOptionPane.ERROR_MESSAGE);
                        limpiar();
                    }
                } 
                else 
                {
                    JOptionPane.showMessageDialog(null,"¡No dejar campos vacios! ",
                            "Datos Incompletos",
                            JOptionPane.WARNING_MESSAGE);
                }
            
        }
        catch (Exception e) 
        {
            
        }
        
    }
    
    public void modificar()
    {
        try
        { 
            int idHorario = Integer.parseInt(this.jTxtCodigo.getText());
            
            int idCoor=0;
            
            for (int i = 0; i <l.size(); i++) 
            {
                if(jCmbCoord.getSelectedItem().equals(l.get(i).getDescripcion()));
                {
                    idCoor = l.get(i).getIdCombo();
                }
            }
            JOptionPane.showMessageDialog(null, idCoor);
            hor.setIdCoordinador(idCoor);
            hor.setDia(this.jCmbDia.getSelectedItem().toString());
            hor.setHoraDesde(this.jTxtHoraD.getText());
            hor.setHoraHasta(this.jTxtHoraH.getText());
            hor.setLugar(this.jTxtLugar.getText());
            hor.setIdHorarioA(idHorario);
            
            if(!validar.IsNullOrEmpty(hor.getDia()) 
                    && !validar.IsNullOrEmpty(hor.getHoraDesde())
                    && !validar.IsNullOrEmpty(hor.getHoraHasta())
                    && !validar.IsNullOrEmpty(hor.getLugar()))
            {
                try 
                {
                    int SioNo=JOptionPane.showConfirmDialog(null,"¿Desea modificar el registro?","Modificar horario",
                    JOptionPane.INFORMATION_MESSAGE);
                    if(SioNo==0)
                    {
                        daoH.modificar(hor);
                        JOptionPane.showMessageDialog(null,"Registro modificado correctamente",
                                "Horario Coordinador", JOptionPane.INFORMATION_MESSAGE);
                        mostrar();
                        limpiar();
                    }
                }
                catch (Exception e) 
                {
                    JOptionPane.showMessageDialog(null,"Ocurrio un problema al modificar " + e.getMessage(),
                                "Error", JOptionPane.ERROR_MESSAGE);
                    limpiar();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"¡No dejar campos vacios! ",
                            "Datos Incompletos",JOptionPane.WARNING_MESSAGE);
            }
        }
        catch (Exception e) 
        {
           JOptionPane.showMessageDialog(null,"Por favor, seleccione un registro para modificar","Seleccionar",
                   JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    public void eliminar()
    {
         try 
        {
           int idHora = Integer.parseInt(this.jTxtCodigo.getText());
           JOptionPane.showMessageDialog(null, idHora);
            int SioNo = JOptionPane.showConfirmDialog(this, "¿Desea Eliminar definitivamente el registro?", "Eliminar Horario",
                    JOptionPane.YES_NO_OPTION);

            if (SioNo == 0) 
            {
                daoH.eliminar(idHora);
                JOptionPane.showMessageDialog(null, "Se ha eliminado Exitosamente");
                mostrar();
                limpiar();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    "Seleccione un registro para poder eliminarlo",
                    "Error",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    public void Cerrar()
    {
        try 
        {
            int SioNo = JOptionPane.showConfirmDialog(this, "¿Esta seguro de salir del formulario?", 
                    "Advertencia", JOptionPane.YES_NO_OPTION);

            if (SioNo == 0) 
            {
                this.setVisible(false);
                menu.cerrar(); 
            }
        } 
        catch (Exception e) 
        {
            
        }
    }
    
    private void limpiar() 
    {
        jTxtCodigo.setText("");
        jTxtHoraD.setText("");
        jTxtHoraH.setText("");
        jTxtLugar.setText("");
        jCmbCoord.setSelectedIndex(0);
        jCmbDia.setSelectedIndex(0);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTxtLugar = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTxtHoraD = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDatos = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jTxtHoraH = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jCmbDia = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTxtCodigo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCmbCoord = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jBtnEditar1 = new javax.swing.JButton();
        jBtnEliminar1 = new javax.swing.JButton();
        jBtnAgregar1 = new javax.swing.JButton();
        jBtnLimpiar1 = new javax.swing.JButton();
        jBtnNuevo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTxtLugar.setColumns(20);
        jTxtLugar.setRows(5);
        jScrollPane2.setViewportView(jTxtLugar);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Codigo Coordinador:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Codigo:");

        jTxtHoraD.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        jTxtHoraD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtHoraDActionPerformed(evt);
            }
        });

        jTableDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDatos);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Hora hasta:");

        jTxtHoraH.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel7.setText("HORARIOS");

        jCmbDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes" }));
        jCmbDia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Hora desde:");

        jTxtCodigo.setEditable(false);
        jTxtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtCodigoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Dia:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Lugar:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Control de Servicio Social Estudiantil");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iconos/l.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jBtnEditar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iconos/mod.png"))); // NOI18N
        jBtnEditar1.setText("Modificar");
        jBtnEditar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnEditar1MouseClicked(evt);
            }
        });
        jBtnEditar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditar1ActionPerformed(evt);
            }
        });

        jBtnEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iconos/delete.png"))); // NOI18N
        jBtnEliminar1.setText("Eliminar");
        jBtnEliminar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnEliminar1MouseClicked(evt);
            }
        });

        jBtnAgregar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iconos/n.png"))); // NOI18N
        jBtnAgregar1.setText("Agregar");
        jBtnAgregar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnAgregar1MouseClicked(evt);
            }
        });
        jBtnAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregar1ActionPerformed(evt);
            }
        });

        jBtnLimpiar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iconos/lim.png"))); // NOI18N
        jBtnLimpiar1.setText("Limpiar");
        jBtnLimpiar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnLimpiar1MouseClicked(evt);
            }
        });

        jBtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iconos/nue.png"))); // NOI18N
        jBtnNuevo.setText("Nuevo");
        jBtnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnNuevoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtnAgregar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnEditar1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(jBtnEliminar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnLimpiar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jBtnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jBtnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnAgregar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnEliminar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnLimpiar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iconos/exit.png"))); // NOI18N
        jButton1.setText("Salir");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(124, 124, 124))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCmbCoord, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCmbDia, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(55, 55, 55))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTxtHoraH, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTxtHoraD, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jTxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCmbCoord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCmbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTxtHoraD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jTxtHoraH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDatosMouseClicked
        llenarTabla();
    }//GEN-LAST:event_jTableDatosMouseClicked

    private void jBtnEditar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEditar1MouseClicked
        modificar();
    }//GEN-LAST:event_jBtnEditar1MouseClicked

    private void jBtnEditar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditar1ActionPerformed

    }//GEN-LAST:event_jBtnEditar1ActionPerformed

    private void jBtnEliminar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnEliminar1MouseClicked
        eliminar();
    }//GEN-LAST:event_jBtnEliminar1MouseClicked

    private void jBtnAgregar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnAgregar1MouseClicked
        insertar();
        //ValidarHora();
    }//GEN-LAST:event_jBtnAgregar1MouseClicked

    private void jBtnAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregar1ActionPerformed

    }//GEN-LAST:event_jBtnAgregar1ActionPerformed

    private void jBtnLimpiar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnLimpiar1MouseClicked
        limpiar();
    }//GEN-LAST:event_jBtnLimpiar1MouseClicked

    private void jBtnNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnNuevoMouseClicked

    }//GEN-LAST:event_jBtnNuevoMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        Cerrar();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jTxtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtCodigoActionPerformed

    private void jTxtHoraDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtHoraDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtHoraDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAgregar1;
    private javax.swing.JButton jBtnEditar1;
    private javax.swing.JButton jBtnEliminar1;
    private javax.swing.JButton jBtnLimpiar1;
    private javax.swing.JButton jBtnNuevo;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCmbCoord;
    private javax.swing.JComboBox<String> jCmbDia;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDatos;
    private javax.swing.JTextField jTxtCodigo;
    private javax.swing.JFormattedTextField jTxtHoraD;
    private javax.swing.JFormattedTextField jTxtHoraH;
    private javax.swing.JTextArea jTxtLugar;
    // End of variables declaration//GEN-END:variables
}
